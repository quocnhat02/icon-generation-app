import { type NextPage } from "next";
import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import Image from "next/image";
import { useState } from "react";
import Button from "~/components/Button";
import FormGroup from "~/components/FormGroup";
import Input from "~/components/Input";
import { api } from "~/utils/api";

const GeneratePage: NextPage = () => {
  const [form, setForm] = useState({
    prompt: "",
    color: "",
  });

  const [imageUrl, setImageUrl] = useState("");

  function updateForm(key: string) {
    return function (e: React.ChangeEvent<HTMLInputElement>) {
      setForm((prev) => ({
        ...prev,
        [key]: e.target.value,
      }));
    };
  }

  const generateIcon = api.generate.generateIcon.useMutation({
    onSuccess(data) {
      if (!data.imageUrl) return;
      setImageUrl(data.imageUrl);
    },
  });

  function handleFormSubmit(e: React.FormEvent) {
    e.preventDefault();
    // TODO: submit the form data to the backend
    generateIcon.mutate({
      prompt: form.prompt,
      color: form.color,
    });

    setForm((prev) => ({
      ...prev,
      prompt: "",
    }));
  }

  const session = useSession();

  const colors = [
    "blue",
    "white",
    "orange",
    "red",
    "green",
    "yellow",
    "pink",
    "black",
  ];

  return (
    <>
      <Head>
        <title>Generate Icons</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container mx-auto flex min-h-screen flex-col items-center gap-4 px-8">
        <h1 className="text-6xl">Generate you icons</h1>
        <form
          action=""
          className="flex w-full flex-col gap-4"
          onSubmit={handleFormSubmit}
        >
          <h2 className="text-xl">
            1. Describe what your want icon to look like.
          </h2>
          <FormGroup>
            <label htmlFor="">Prompt</label>
            <Input value={form.prompt} onChange={updateForm("prompt")} />
          </FormGroup>

          <h2 className="text-xl">2. Pick your icon color.</h2>
          <FormGroup className="grid grid-cols-4">
            {colors.map((color) => (
              <label htmlFor="" className="flex gap-2 text-2xl">
                <input
                  type="radio"
                  name="color"
                  checked={color === form.color}
                  onChange={() =>
                    setForm((prev) => ({
                      ...prev,
                      color,
                    }))
                  }
                />{" "}
                {color}
              </label>
            ))}
          </FormGroup>

          <Button
            isLoading={generateIcon.isLoading}
            disabled={generateIcon.isLoading}
          >
            Submit
          </Button>
        </form>

        {imageUrl && (
          <>
            <h2 className="text-xl">Your Icons</h2>
            <section className="grid w-full grid-cols-4 gap-4">
              <Image
                src={imageUrl}
                alt="an image of your generated prompt"
                width={100}
                height={100}
                className="w-full bg-cover bg-center"
              />
            </section>
          </>
        )}
      </main>
    </>
  );
};

export default GeneratePage;
